{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","robots.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","StrictMode","map","user","i","SearchBox","searchfiled","searchChange","type","placeholder","onChange","username","App","onSearchChange","event","setState","target","value","state","filteredrobots","this","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"sNAceA,EAZF,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,KAAOC,EAAgB,EAAhBA,MAAgB,EAATC,GAEzB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAK,QAAQC,IAAG,+BAA0BL,EAA1B,cACrB,gCACI,mCAAMA,EAAN,OACA,kCAAMC,EAAN,cCKDK,EAXE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEhB,OACI,cAAC,IAAMC,WAAP,UACKD,EAAOE,KAAI,SAACC,EAAMC,GACf,OAAO,cAAC,EAAD,CAAcT,GAAIK,EAAOI,GAAGT,GAAIF,KAAMO,EAAOI,GAAGX,KAAMC,MAAOM,EAAOI,GAAGV,OAA5DU,SCEnBC,EARG,SAAC,GAAiC,EAAhCC,YAAiC,IAAnBC,EAAkB,EAAlBA,aAC9B,OACI,qBAAKX,UAAY,MAAjB,SACK,uBAAOA,UAAU,oCAAoCY,KAAO,SAASC,YAAY,gBAAgBC,SAAYH,OCL7GP,EAAS,CAClB,CACIL,GAAG,EACHF,KAAM,OACNkB,SAAU,UACVjB,MAAO,iBAEX,CACIC,GAAG,EACHF,KAAM,QACNkB,SAAU,UACVjB,MAAO,kBAEX,CACIC,GAAG,EACHF,KAAM,QACNkB,SAAU,MACVjB,MAAO,kBAEX,CACIC,GAAG,EACHF,KAAM,SACNkB,SAAU,QACVjB,MAAO,eAEX,CACIC,GAAG,EACHF,KAAM,IACNkB,SAAU,IACVjB,MAAO,cAEX,CACIC,GAAG,EACHF,KAAM,IACNkB,SAAU,IACVjB,MAAO,eCHAkB,E,kDAzBX,aAAc,IAAD,8BACT,gBAOJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACT,YAAaQ,EAAME,OAAOC,SAPzC,EAAKC,MAAQ,CACTlB,OAAOA,EACPM,YAAa,IAJR,E,qDAYJ,IAAD,OACEa,EAAiBC,KAAKF,MAAMlB,OAAOqB,QAAO,SAAArB,GAC5C,OAAOA,EAAOP,KAAK6B,cAAcC,SAAS,EAAKL,MAAMZ,YAAYgB,kBAErE,OACI,sBAAK1B,UAAY,KAAjB,UACA,8CACA,cAAC,EAAD,CAAWW,aAAgBa,KAAKP,iBAChC,cAAC,EAAD,CAAUb,OAAUmB,W,GArBdK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACH,cAAC,EAAD,IACDC,SAASC,eAAe,SAM7BZ,M","file":"static/js/main.45767583.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name , email, id} ) => {\n    //const {name , email, id} = props;\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5' >\n            <img alt= 'robot' src={`https://robohash.org/${name}?200x200`} />\n            <div>\n                <h2> {name} </h2>\n                <p> { email} </p>\n            </div>\n        </div>\n    );\n}\nexport default Card;","import React from 'react'\nimport Card from './Card'\n\nconst CardList = ({ robots }) => {\n    //const cardArray = \n    return (\n        <React.StrictMode>\n            {robots.map((user, i) => {\n                return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\n             })}\n      </React.StrictMode>        \n    );\n}\n\nexport default CardList;\n\n//we have a cardlist component that lists cards and what we need to do is to pass to this component a property which in this case is robots","import React from 'react';\n\nconst SearchBox = ({searchfiled , searchChange}) => {\n    return (\n        <div className = 'pa2'>\n             <input className='pa3 ba ba--green bg-lightest-blue' type = 'search' placeholder='search robots' onChange = {searchChange}/>\n             \n        </div>\n    );\n}\nexport default SearchBox;","export const robots = [\n    {\n        id:1,\n        name: 'Amir',\n        username: 'BigAmir',\n        email: 'amir@gmil.com'\n    },\n    {\n        id:2,\n        name: 'Halat',\n        username: 'Mahrooi',\n        email: 'halat@gmil.com'\n    },    \n    {\n        id:3,\n        name: 'Ehsan',\n        username: 'Esi',\n        email: 'ehsan@gmil.com'\n    },\n    {\n        id:4,\n        name: 'Shahin',\n        username: 'Maman',\n        email: 'eh@gmil.com'\n    },\n    {\n        id:5,\n        name: 'X',\n        username: 'X',\n        email: 'X@gmil.com'\n    },\n    {\n        id:6,\n        name: 'Y',\n        username: 'Y',\n        email: 'Y@gmil.com'\n    }    \n\n]","import React, {Component} from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport {robots} from './robots';\n\n\nclass App extends Component{\n    constructor(){\n        super()\n        this.state = {\n            robots:robots,\n            searchfiled: ''\n        }\n    }\n\n    onSearchChange = (event) => {\n        this.setState({searchfiled: event.target.value})\n \n    }\n    render(){\n        const filteredrobots = this.state.robots.filter(robots => {\n            return robots.name.toLowerCase().includes(this.state.searchfiled.toLowerCase());\n        })       \n        return (\n            <div className = 'tc'>\n            <h1>RobotFriends</h1>\n            <SearchBox searchChange = {this.onSearchChange}/>\n            <CardList robots = {filteredrobots}/>\n            </div>\n        );\n    }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n//import {robots} from './robots';\n\nReactDOM.render(\n      <App/>\n    ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}