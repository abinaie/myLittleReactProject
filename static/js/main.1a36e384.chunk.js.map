{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundries.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","StrictMode","map","user","i","SearchBox","searchfiled","searchChange","type","placeholder","onChange","ErrorBoundries","props","state","hasError","error","info","this","setState","children","Component","Scroll","style","overflowY","border","height","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredrobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,KAAOC,EAAgB,EAAhBA,MAAgB,EAATC,GAEzB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAK,QAAQC,IAAG,+BAA0BL,EAA1B,cACrB,gCACI,mCAAMA,EAAN,OACA,kCAAMC,EAAN,cCKDK,EAXE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEhB,OACI,cAAC,IAAMC,WAAP,UACKD,EAAOE,KAAI,SAACC,EAAMC,GACf,OAAO,cAAC,EAAD,CAAcT,GAAIK,EAAOI,GAAGT,GAAIF,KAAMO,EAAOI,GAAGX,KAAMC,MAAOM,EAAOI,GAAGV,OAA5DU,SCEnBC,EARG,SAAC,GAAiC,EAAhCC,YAAiC,IAAnBC,EAAkB,EAAlBA,aAC9B,OACI,qBAAKX,UAAY,MAAjB,SACK,uBAAOA,UAAU,oCAAoCY,KAAO,SAASC,YAAY,gBAAgBC,SAAYH,OCkB3GI,E,kDApBX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,UAAU,GAHA,E,8DAOAC,EAAQC,GACtBC,KAAKC,SAAS,CAACJ,UAAS,M,+BAIxB,OAAGG,KAAKJ,MAAMC,SACH,sFAGJG,KAAKL,MAAMO,a,GAjBGC,aCQdC,EARA,SAACT,GACZ,OACI,qBAAKU,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKb,EAAMO,YC2CJO,G,wDAxCX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKV,SAAS,CAACZ,YAAasB,EAAMC,OAAOC,SAbzC,EAAKjB,MAAQ,CACTb,OAAO,GACPM,YAAa,IAJR,E,gEAOQ,IAAD,OAChByB,MAAM,8CAA8CC,MAAK,SAAAC,GACrD,OAAOA,EAASC,UACjBF,MAAK,SAAAG,GACJ,EAAKjB,SAAS,CAAClB,OAAQmC,S,+BAOtB,IAAD,OACEC,EAAiBnB,KAAKJ,MAAMb,OAAOqC,QAAO,SAAArC,GAC5C,OAAOA,EAAOP,KAAK6C,cAAcC,SAAS,EAAK1B,MAAMP,YAAYgC,kBAGrE,OAAiC,IAA7BrB,KAAKJ,MAAMb,OAAOwC,OACX,yCAGJ,sBAAK5C,UAAY,KAAjB,UACC,oBAAIA,UAAU,KAAd,2BACA,cAAC,EAAD,CAAWW,aAAgBU,KAAKU,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU3B,OAAUoC,e,GAjC1BhB,cCKHqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACH,cAAC,EAAD,IACDC,SAASC,eAAe,SAM7BX,M","file":"static/js/main.1a36e384.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name , email, id} ) => {\n    //const {name , email, id} = props;\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5' >\n            <img alt= 'robot' src={`https://robohash.org/${name}?200x200`} />\n            <div>\n                <h2> {name} </h2>\n                <p> { email} </p>\n            </div>\n        </div>\n    );\n}\nexport default Card;","import React from 'react'\nimport Card from './Card'\n\nconst CardList = ({ robots }) => {\n    //const cardArray = \n    return (\n        <React.StrictMode>\n            {robots.map((user, i) => {\n                return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\n             })}\n      </React.StrictMode>        \n    );\n}\n\nexport default CardList;\n\n//we have a cardlist component that lists cards and what we need to do is to pass to this component a property which in this case is robots","import React from 'react';\n\nconst SearchBox = ({searchfiled , searchChange}) => {\n    return (\n        <div className = 'pa2'>\n             <input className='pa3 ba ba--green bg-lightest-blue' type = 'search' placeholder='search robots' onChange = {searchChange}/>\n             \n        </div>\n    );\n}\nexport default SearchBox;","import React , {Component} from 'react';\n\nclass ErrorBoundries extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n    //this will activate when an error happens for that child component!\n    componentDidCatch(error , info){\n        this.setState({hasError:true})\n    }\n\n    render(){\n        if(this.state.hasError){\n            return <h1>Oooops! Something Went Wrong! Please Comeback Later!</h1>\n        }\n        //else return the children between this wrapper which is caled children!\n        return this.props.children \n    }\n\n}\nexport default ErrorBoundries;","import React from 'react';\n\nconst Scroll = (props) => {\n    return(\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '500px'}}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport ErrorBoundries from '../components/ErrorBoundries'\nimport Scroll from '../components/Scroll'\nimport './App.css'\n\nclass App extends Component{\n    constructor(){\n        super()\n        this.state = {\n            robots:[],\n            searchfiled: ''\n        }\n    }\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users').then(response => {\n            return response.json()\n        }).then(users => {\n            this.setState({robots: users})\n        });\n    }\n    onSearchChange = (event) => {\n        this.setState({searchfiled: event.target.value})\n \n    }\n    render(){\n        const filteredrobots = this.state.robots.filter(robots => {\n            return robots.name.toLowerCase().includes(this.state.searchfiled.toLowerCase());\n        })  \n        \n        if (this.state.robots.length === 0){\n            return <h1>Loading</h1>\n        }else{\n            return (\n               <div className = 'tc'>\n                <h1 className='f1'> RobotFriends</h1>\n                <SearchBox searchChange = {this.onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundries>\n                        <CardList robots = {filteredrobots}/>\n                    </ErrorBoundries>\n                </Scroll>    \n               </div>\n            );\n        }\n    }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n//import {robots} from './robots';\n\nReactDOM.render(\n      <App/>\n    ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"],"sourceRoot":""}